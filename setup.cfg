# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = osw
description = Python toolset for data processing, queries, wikicode generation and page manipulation
author = "Simon Stier"
author_email = simon.stier@isc.fraunhofer.de
license = AGPL-3.0-or-later
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/OpenSemanticLab/osw-python
# Add here related links, for example:
project_urls =
    Documentation = https://opensemanticlab.github.io/osw-python/
    Source = https://github.com/OpenSemanticLab/osw-python
    Changelog = https://github.com/OpenSemanticLab/osw-python/blob/main/CHANGELOG.md
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    Download = https://pypi.org/project/osw/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    pydantic
    datamodel-code-generator==0.15.0
    mwclient
    mwparserfromhell
    SPARQLWrapper
    jsonpath-ng
    numpy
    pyyaml
    pandas
    typing_extensions
    dataclasses
    pathlib
    sphinx
    chardet
    matplotlib
    scipy
    pysimplegui


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install osw[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools~=63.4.1
    pytest~=7.1.2
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = osw.module:function
# For example:
# console_scripts =
#     fibonacci = osw.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov osw --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[tool.black]
line-length = 88

[flake8]
# Some sane defaults for the code style checker flake8
# 79 characters is the default line length according to PEP8
# 88 is the option recommended by black
max_line_length = 88
select = C,E,F,W,B,B950
extend_ignore = E203, E501, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
# E501 allows a line length of 79 only
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    src/osw/model/entity.py #autogenerated

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3.1
package = osw
extensions =
    github_actions
    markdown
    no_skeleton
    pre_commit
